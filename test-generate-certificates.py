#!/usr/bin/env python

"""
Generate client and server CURVE certificate files then move them into the
appropriate store directory, private_keys or public_keys. The certificates
generated by this script are used by the stonehouse and ironhouse examples.

In practice this would be done by hand or some out-of-band process.

Author: Chris Laws
"""

import os
import shutil

import zmq.auth

BROKER_KEYS_DIR = 'certificates/broker'
BROKER_PUBLIC_KEYS_DIR = 'certificates/broker/public'

WORKER_KEYS_DIR = 'certificates/worker'
WORKER_PUBLIC_KEYS_DIR = 'certificates/worker/public'


def generate_certificates(base_dir):
    """ Generate client and server CURVE certificate files"""

    # Create directories for certificates, remove old content if necessary
    for d in [BROKER_KEYS_DIR, BROKER_PUBLIC_KEYS_DIR, WORKER_KEYS_DIR, WORKER_PUBLIC_KEYS_DIR]:
        if os.path.exists(d):
            shutil.rmtree(d)
        os.mkdir(d)

    # create new keys in certificates dir
    broker_public_file, broker_secret_file = zmq.auth.create_certificates(BROKER_KEYS_DIR, 'broker')
    worker_public_file, worker_secret_file = zmq.auth.create_certificates(WORKER_KEYS_DIR, 'worker')

    # move public keys to appropriate directory
    for key_file in os.listdir(WORKER_KEYS_DIR):
        if key_file.endswith(".key"):
            shutil.copy(os.path.join(WORKER_KEYS_DIR, key_file),
                        os.path.join(BROKER_PUBLIC_KEYS_DIR, '.'))


if __name__ == '__main__':
    if zmq.zmq_version_info() < (4, 0):
        raise RuntimeError(
            "Security is not supported in libzmq version < 4.0. libzmq version {0}".format(zmq.zmq_version()))

    generate_certificates(os.path.dirname(__file__))
